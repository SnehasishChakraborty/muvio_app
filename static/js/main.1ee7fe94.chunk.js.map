{"version":3,"sources":["components/Movie.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","vote","title","poster_path","vote_average","overview","release_date","className","src","substring","App","useState","movies","setMovies","searchTerm","setSearchTerm","getMovies","Api","fetch","then","resp","json","data","console","log","results","useEffect","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","length","map","movie","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LA4BeA,EA1BD,SAAC,GAA4D,IAEjDC,EAFVC,EAA0D,EAA1DA,MAAMC,EAAoD,EAApDA,YAAYC,EAAwC,EAAxCA,aAAaC,EAA2B,EAA3BA,SAASC,EAAkB,EAAlBA,aAWpD,OACI,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKL,EAdP,mCAc4BA,EAAc,wKAC7C,sBAAKI,UAAY,aAAjB,UACI,+BAAKL,EAAL,KAAcI,EAAaG,UAAU,EAAE,GAAvC,OACA,sBAAMF,WAdIN,EAcoBG,EAblCH,GAAQ,EACD,QACHA,GAAO,EACJ,SAEA,OAQH,SAA8CG,OAElD,sBAAKG,UAAU,aAAf,UACI,2CACA,4BAAIF,WCiCLK,MAhDf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACNC,EADM,KACEC,EADF,OAEuBF,mBAAS,IAFhC,mBAENG,EAFM,KAEMC,EAFN,KAIPC,EAAY,SAACC,GACjBC,MAAMD,GACLE,MAAK,SAAAC,GAAI,OAAGA,EAAKC,UACjBF,MAAK,SAAAG,GACJC,QAAQC,IAAIF,GACZT,EAAUS,EAAKG,aAgBnB,OAHAC,qBAAU,WACRV,EA3BgB,yHA4BhB,IAEA,qCACA,8BACE,iCACE,sBAAMW,SAjBW,SAACC,GACtBA,EAAEC,iBACCf,IACDE,EAjBY,6FAiBQF,GACpBC,EAAc,MAaZ,SACG,uBAAOR,UAAU,SACjBuB,KAAK,SACLC,YAAY,gBACZC,MAAOlB,EACPmB,SAfc,SAACL,GACtBb,EAAca,EAAEM,OAAOF,gBAmBvB,qBAAKzB,UAAU,kBAAf,SACCK,EAAOuB,OAAS,GAAKvB,EAAOwB,KAAI,SAAAC,GAC/B,OAAO,cAAC,EAAD,eAA0BA,GAAdA,EAAMC,aCpChBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1ee7fe94.chunk.js","sourcesContent":["import React from 'react'\r\nconst imgApi = 'https://image.tmdb.org/t/p/w1280'\r\nconst Movie = ({title,poster_path,vote_average,overview,release_date}) => {\r\n\r\n    const setVoteClass = (vote) => {\r\n        if (vote >= 8)\r\n            return 'green'\r\n        else if(vote >=6)\r\n            return 'orange'\r\n        else\r\n            return 'red'\r\n    }\r\n    \r\n    return (\r\n        <div className='movie'>\r\n            <img src={poster_path ? imgApi+poster_path : 'https://images.unsplash.com/photo-1485846234645-a62644f84728?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MXx8bW92aWV8ZW58MHx8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60'}></img>\r\n            <div className = 'movie-info'>\r\n                <h3>{title} ({release_date.substring(0,4)})</h3>\r\n                <span className={setVoteClass(vote_average)}>{vote_average}</span>\r\n            </div>\r\n            <div className='movie-over'>\r\n                <h2>Overview:</h2>\r\n                <p>{overview}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movie","import React, { useEffect, useState } from 'react'\nimport Movie from './components/Movie'\n\nconst featuredApi = 'https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=04c35731a5ee918f014970082a0088b1&page=1'\n\nconst searchApi = 'https://api.themoviedb.org/3/search/movie?&api_key=04c35731a5ee918f014970082a0088b1&query='\n\nfunction App() {\n  const [movies, setMovies] = useState([])\n  const [searchTerm, setSearchTerm] = useState('')\n\n  const getMovies = (Api)=>{\n    fetch(Api)\n    .then(resp=> resp.json())\n    .then(data => {\n      console.log(data)\n      setMovies(data.results)})\n  } \n\n  const handleOnSubmit = (e) => {\n    e.preventDefault()\n    if(searchTerm){\n      getMovies(searchApi+searchTerm)\n      setSearchTerm('')  \n    }\n  }\n  const handleOnChange = (e) => {\n    setSearchTerm(e.target.value)\n  }\n  useEffect(()=>{\n    getMovies(featuredApi)\n  },[])\n  return (\n    <>\n    <div>\n      <header>\n        <form onSubmit={handleOnSubmit}>\n           <input className='search' \n           type='search' \n           placeholder='Search movies'\n           value={searchTerm}\n           onChange={handleOnChange}>\n           </input>\n        </form>\n      </header>\n    </div>\n    <div className='movie-container'>\n    {movies.length > 0 && movies.map(movie=>{\n      return <Movie key={movie.id} {...movie}/>\n    })}\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}